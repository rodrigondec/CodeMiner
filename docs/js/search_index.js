var search_data = {"index":{"searchIndex":["game","kill","logparser","player","test","unit","ui","console","testgame","testkill","testparser","testplayer","add_kills()","all_games_info()","decrement_kill()","get_game()","get_game_info()","increment_kill()","info()","new()","new()","new()","new()","process_kill_line()","process_user_info_line()","ranking()","setup()","setup()","test_add_kill()","test_add_kills()","test_add_kills_type_check()","test_add_player()","test_create_or_get_player()","test_creation()","test_creation()","test_creation()","test_decrement_kill()","test_file_path_typecheck()","test_game_1()","test_game_2()","test_games_1_2()","test_get_player()","test_get_player_world()","test_increment_kill()","test_info()","test_invalid_file_path()","test_killer_nil()","test_killer_typecheck()","test_killers_info()","test_mean_typecheck()","test_name_typecheck()","test_name_typecheck()","test_players_info()","test_process_kill()","test_process_kill_line()","test_process_user_info_line()","test_victim_typecheck()","license","readme","games.log","makefile","game_1.log","game_2.log","games_1-2.log"],"longSearchIndex":["game","kill","logparser","player","test","test::unit","test::unit::ui","test::unit::ui::console","testgame","testkill","testparser","testplayer","player#add_kills()","logparser#all_games_info()","player#decrement_kill()","logparser#get_game()","logparser#get_game_info()","player#increment_kill()","game#info()","game::new()","kill::new()","logparser::new()","player::new()","game#process_kill_line()","game#process_user_info_line()","game#ranking()","testgame#setup()","testplayer#setup()","testgame#test_add_kill()","testplayer#test_add_kills()","testplayer#test_add_kills_type_check()","testgame#test_add_player()","testgame#test_create_or_get_player()","testgame#test_creation()","testkill#test_creation()","testplayer#test_creation()","testplayer#test_decrement_kill()","testparser#test_file_path_typecheck()","testparser#test_game_1()","testparser#test_game_2()","testparser#test_games_1_2()","testgame#test_get_player()","testgame#test_get_player_world()","testplayer#test_increment_kill()","testgame#test_info()","testparser#test_invalid_file_path()","testkill#test_killer_nil()","testkill#test_killer_typecheck()","testgame#test_killers_info()","testkill#test_mean_typecheck()","testgame#test_name_typecheck()","testplayer#test_name_typecheck()","testgame#test_players_info()","testgame#test_process_kill()","testgame#test_process_kill_line()","testgame#test_process_user_info_line()","testkill#test_victim_typecheck()","","","","","","",""],"info":[["Game","","Game.html","","<p>Class representing a game. Contains the name of the game, list of players\nand list of kills\n"],["Kill","","Kill.html","","<p>Class representing a kill. Contains the killer, victim and the mean\n"],["LogParser","","LogParser.html","","<p>Class for parsing the games.log\n"],["Player","","Player.html","","<p>Class representing a player. Contains the name and kill counter of the\nplayer\n"],["Test","","Test.html","",""],["Test::Unit","","Test/Unit.html","",""],["Test::Unit::UI","","Test/Unit/UI.html","",""],["Test::Unit::UI::Console","","Test/Unit/UI/Console.html","",""],["TestGame","","TestGame.html","",""],["TestKill","","TestKill.html","",""],["TestParser","","TestParser.html","",""],["TestPlayer","","TestPlayer.html","",""],["add_kills","Player","Player.html#method-i-add_kills","(number: Numeric)","<p>Increment the player kills counter by a provided number Params:\n<p>number &mdash; numeric value to be added on the …\n\n"],["all_games_info","LogParser","LogParser.html#method-i-all_games_info","()",""],["decrement_kill","Player","Player.html#method-i-decrement_kill","()","<p>Decrement the player kills counter\n"],["get_game","LogParser","LogParser.html#method-i-get_game","(game_index)",""],["get_game_info","LogParser","LogParser.html#method-i-get_game_info","(game_index)",""],["increment_kill","Player","Player.html#method-i-increment_kill","()","<p>Increment the player kills counter\n"],["info","Game","Game.html#method-i-info","()",""],["new","Game","Game.html#method-c-new","(name)",""],["new","Kill","Kill.html#method-c-new","(killer: Player | nil, victim: Player, mean: String)","<p>Initialize a Player instance Params:\n<p>killer &mdash; <code>Player</code> instance of the killer. May be nil\n<p>victim &mdash; <code>Player</code> instance …\n"],["new","LogParser","LogParser.html#method-c-new","(file_path)",""],["new","Player","Player.html#method-c-new","(name: String)","<p>Initialize a Player instance Params:\n<p>name &mdash; name string for the player\n\n"],["process_kill_line","Game","Game.html#method-i-process_kill_line","(kill_line)",""],["process_user_info_line","Game","Game.html#method-i-process_user_info_line","(user_info_line)",""],["ranking","Game","Game.html#method-i-ranking","()",""],["setup","TestGame","TestGame.html#method-i-setup","()",""],["setup","TestPlayer","TestPlayer.html#method-i-setup","()",""],["test_add_kill","TestGame","TestGame.html#method-i-test_add_kill","()",""],["test_add_kills","TestPlayer","TestPlayer.html#method-i-test_add_kills","()",""],["test_add_kills_type_check","TestPlayer","TestPlayer.html#method-i-test_add_kills_type_check","()",""],["test_add_player","TestGame","TestGame.html#method-i-test_add_player","()",""],["test_create_or_get_player","TestGame","TestGame.html#method-i-test_create_or_get_player","()",""],["test_creation","TestGame","TestGame.html#method-i-test_creation","()",""],["test_creation","TestKill","TestKill.html#method-i-test_creation","()",""],["test_creation","TestPlayer","TestPlayer.html#method-i-test_creation","()",""],["test_decrement_kill","TestPlayer","TestPlayer.html#method-i-test_decrement_kill","()",""],["test_file_path_typecheck","TestParser","TestParser.html#method-i-test_file_path_typecheck","()",""],["test_game_1","TestParser","TestParser.html#method-i-test_game_1","()",""],["test_game_2","TestParser","TestParser.html#method-i-test_game_2","()",""],["test_games_1_2","TestParser","TestParser.html#method-i-test_games_1_2","()",""],["test_get_player","TestGame","TestGame.html#method-i-test_get_player","()",""],["test_get_player_world","TestGame","TestGame.html#method-i-test_get_player_world","()",""],["test_increment_kill","TestPlayer","TestPlayer.html#method-i-test_increment_kill","()",""],["test_info","TestGame","TestGame.html#method-i-test_info","()",""],["test_invalid_file_path","TestParser","TestParser.html#method-i-test_invalid_file_path","()",""],["test_killer_nil","TestKill","TestKill.html#method-i-test_killer_nil","()",""],["test_killer_typecheck","TestKill","TestKill.html#method-i-test_killer_typecheck","()",""],["test_killers_info","TestGame","TestGame.html#method-i-test_killers_info","()",""],["test_mean_typecheck","TestKill","TestKill.html#method-i-test_mean_typecheck","()",""],["test_name_typecheck","TestGame","TestGame.html#method-i-test_name_typecheck","()",""],["test_name_typecheck","TestPlayer","TestPlayer.html#method-i-test_name_typecheck","()",""],["test_players_info","TestGame","TestGame.html#method-i-test_players_info","()",""],["test_process_kill","TestGame","TestGame.html#method-i-test_process_kill","()",""],["test_process_kill_line","TestGame","TestGame.html#method-i-test_process_kill_line","()",""],["test_process_user_info_line","TestGame","TestGame.html#method-i-test_process_user_info_line","()",""],["test_victim_typecheck","TestKill","TestKill.html#method-i-test_victim_typecheck","()",""],["LICENSE","","LICENSE_md.html","","\n<pre>                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007</pre>\n<p>Copyright …\n"],["README","","README_md.html","","<p>Codeminer Quake Log Parser\n<p>Project made in Ruby for Codeminer interview\n<p>Setup\n"],["games.log","","games_log.html","","\n<pre> 0:00 ------------------------------------------------------------\n 0:00 InitGame: \\sv_floodProtect\\1\\sv_maxPing\\0\\sv_minPing\\0\\sv_maxRate\\10000\\sv_minRate\\0\\sv_hostname\\Code ...</pre>\n"],["makefile","","makefile.html","","<p>test:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ruby</span> <span class=\"ruby-identifier\">test_runner</span>.<span class=\"ruby-identifier\">rb</span>\n</pre>\n<p>task.1:\n"],["game_1.log","","tests/data/game_1_log.html","","\n<pre>0:00 ------------------------------------------------------------\n0:00 InitGame: \\sv_floodProtect\\1\\sv_maxPing\\0\\sv_minPing\\0\\sv_maxRate\\10000\\sv_minRate\\0\\sv_hostname\\Code ...</pre>\n"],["game_2.log","","tests/data/game_2_log.html","","<p>20:37 ————————————————————\n\n<pre>20:37 InitGame: \\sv_floodProtect\\1\\sv_maxPing\\0\\sv_minPing\\0\\sv_maxRate\\10000\\sv_minRate\\0\\sv_hostname\\Code ...</pre>\n"],["games_1-2.log","","tests/data/games_1-2_log.html","","\n<pre> 0:00 ------------------------------------------------------------\n 0:00 InitGame: \\sv_floodProtect\\1\\sv_maxPing\\0\\sv_minPing\\0\\sv_maxRate\\10000\\sv_minRate\\0\\sv_hostname\\Code ...</pre>\n"]]}}